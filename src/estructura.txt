游늭 src
  游늯 App.vue
  游늯 estructura.txt
    ---C칩digo---
    ---Fin C칩digo---
  游늯 main.js
    ---C칩digo---
    // src/main.js
    
    // 1. Eliminamos los console.log que le칤an las variables de entorno.
    // Ya no son necesarios porque la configuraci칩n est치 directamente en config.js.
    
    // 2. Importa tu configuraci칩n de Firebase. Esto asegura que se inicialice.
    import '@/firebase/config'
    
    import './assets/main.css'
    
    import { createApp } from 'vue'
    import App from './App.vue'
    import router from './router'
    
    const app = createApp(App)
    
    app.use(router)
    
    app.mount('#app')
    ---Fin C칩digo---
  游늭 assets
    游늯 base.css
      ---C칩digo---
      /* color palette from <https://github.com/vuejs/theme> */
      :root {
        --vt-c-white: #ffffff;
        --vt-c-white-soft: #f8f8f8;
        --vt-c-white-mute: #f2f2f2;
      
        --vt-c-black: #181818;
        --vt-c-black-soft: #222222;
        --vt-c-black-mute: #282828;
      
        --vt-c-indigo: #2c3e50;
      
        --vt-c-divider-light-1: rgba(60, 60, 60, 0.29);
        --vt-c-divider-light-2: rgba(60, 60, 60, 0.12);
        --vt-c-divider-dark-1: rgba(84, 84, 84, 0.65);
        --vt-c-divider-dark-2: rgba(84, 84, 84, 0.48);
      
        --vt-c-text-light-1: var(--vt-c-indigo);
        --vt-c-text-light-2: rgba(60, 60, 60, 0.66);
        --vt-c-text-dark-1: var(--vt-c-white);
        --vt-c-text-dark-2: rgba(235, 235, 235, 0.64);
      }
      
      /* semantic color variables for this project */
      :root {
        --color-background: var(--vt-c-white);
        --color-background-soft: var(--vt-c-white-soft);
        --color-background-mute: var(--vt-c-white-mute);
      
        --color-border: var(--vt-c-divider-light-2);
        --color-border-hover: var(--vt-c-divider-light-1);
      
        --color-heading: var(--vt-c-text-light-1);
        --color-text: var(--vt-c-text-light-1);
      
        --section-gap: 160px;
      }
      
      @media (prefers-color-scheme: dark) {
        :root {
          --color-background: var(--vt-c-black);
          --color-background-soft: var(--vt-c-black-soft);
          --color-background-mute: var(--vt-c-black-mute);
      
          --color-border: var(--vt-c-divider-dark-2);
          --color-border-hover: var(--vt-c-divider-dark-1);
      
          --color-heading: var(--vt-c-text-dark-1);
          --color-text: var(--vt-c-text-dark-2);
        }
      }
      
      *,
      *::before,
      *::after {
        box-sizing: border-box;
        margin: 0;
        font-weight: normal;
      }
      
      body {
        min-height: 100vh;
        color: var(--color-text);
        background: var(--color-background);
        transition:
          color 0.5s,
          background-color 0.5s;
        line-height: 1.6;
        font-family:
          Inter,
          -apple-system,
          BlinkMacSystemFont,
          'Segoe UI',
          Roboto,
          Oxygen,
          Ubuntu,
          Cantarell,
          'Fira Sans',
          'Droid Sans',
          'Helvetica Neue',
          sans-serif;
        font-size: 15px;
        text-rendering: optimizeLegibility;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
      ---Fin C칩digo---
    游늯 logo.svg
    游늯 main.css
      ---C칩digo---
      /* src/assets/main.css */
      
      /* 1. Sistema de Dise침o: Variables de Color y Layout */
      :root {
        /* --- Paleta de Colores de Marca --- */
        --color-fondo: #101010; /* Un negro a칰n m치s profundo */
        --color-superficie: #1c1c1c; /* Un gris oscuro para las tarjetas */
        --color-primario: #e8b943; /* Dorado de la marca */
        --color-borde: #2a2a2a; /* Un color sutil para bordes y separadores */
      
        --color-texto-principal: #f0f0f0; /* Un blanco roto, m치s suave a la vista */
        --color-texto-secundario: #a0a0a0;
      
        --radio-borde: 8px;
      
        /* --- Variables de Layout --- */
        --header-height: 60px;
        --subheader-height: 50px;
      }
      
      /* 2. Reset B치sico y Tipograf칤a Profesional */
      * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
      }
      
      body {
        font-family: 'Roboto', sans-serif;
        background-color: var(--color-fondo);
        color: var(--color-texto-principal);
        line-height: 1.7; /* Aumentamos el interlineado para mejor legibilidad */
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
      
      #app {
        min-height: 100vh;
        padding-top: calc(var(--header-height) + var(--subheader-height));
      }
      
      /* --- Escala de Tipograf칤a --- */
      h1,
      h2,
      h3,
      h4 {
        font-weight: 700;
        line-height: 1.3;
        color: var(--color-texto-principal); /* T칤tulos principales en blanco */
        letter-spacing: -0.5px; /* Detalle profesional */
      }
      h1 {
        font-size: 2.5rem;
      }
      h2 {
        font-size: 1.75rem;
      }
      h3 {
        font-size: 1.25rem;
      }
      
      /* Los enlaces usar치n el color primario para destacar */
      a {
        text-decoration: none;
        color: var(--color-primario);
        transition: filter 0.2s ease;
      }
      a:hover {
        filter: brightness(1.2);
      }
      
      /* --- Contenedor Principal --- */
      /* Usaremos esta clase en nuestras vistas para unificar el padding */
      .page-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1.5rem;
      }
      ---Fin C칩digo---
    游늭 images
      游늯 logo.png
    游늭 patrocinadores
      游늯 CostiBarber.png
  游늭 components
    游늯 AppFooter.vue
    游늯 AppHeader.vue
    游늯 BannerPatrocinador.vue
    游늯 EncuestaActiva.vue
    游늯 SubHeader.vue
    游늭 icons
      游늯 IconCommunity.vue
      游늯 IconDocumentation.vue
      游늯 IconEcosystem.vue
      游늯 IconSupport.vue
      游늯 IconTooling.vue
  游늭 data
    游늯 patrocinadores.js
      ---C칩digo---
      // src/data/patrocinadores.js
      
      // Para que esto funcione, primero debes colocar las im치genes
      // dentro de la carpeta 'src/assets/patrocinadores/'
      
      // 1. Importa cada imagen que quieras usar
      import CostiBarber from '@/assets/patrocinadores/CostiBarber.png'
      // (cuando a침adas un nuevo logo, imp칩rtalo aqu칤)
      
      // 2. Crea y exporta el array de patrocinadores
      export const listaPatrocinadores = [
        {
          id: 1,
          nombre: 'CostiBarber',
          enlace: 'https://www.instagram.com/costi.barberr',
          imagen: CostiBarber, // Usa la variable importada
        },
        // Para a침adir m치s, solo copia un bloque de arriba y p칠galo aqu칤
      ]
      
      // NOTA: Para este ejemplo, necesitar치s tener 4 im치genes de ejemplo en
      // tu carpeta 'src/assets/patrocinadores/' llamadas:
      // - sponsor-a.png
      ---Fin C칩digo---
  游늭 firebase
    游늯 config.js
      ---C칩digo---
      // src/firebase/config.js
      
      import { initializeApp } from 'firebase/app'
      import { getFirestore } from 'firebase/firestore'
      import { getAuth } from 'firebase/auth'
      
      // 춰ESTE ES EL ARCHIVO IMPORTANTE AHORA!
      // La conexi칩n a Firebase se establece aqu칤 con estas claves.
      const firebaseConfig = {
        apiKey: 'AIzaSyAXfKdc6dfdi0ZxV-aIMzi_cRD654asPU4',
        authDomain: 'pes6balcarce2026.firebaseapp.com',
        projectId: 'pes6balcarce2026',
        storageBucket: 'pes6balcarce2026.appspot.com',
        messagingSenderId: '896058552329',
        appId: '1:896058552329:web:35790a6652671130c108d8',
        measurementId: 'G-KQ25EKH280',
      }
      
      const app = initializeApp(firebaseConfig)
      const db = getFirestore(app)
      const auth = getAuth(app)
      
      export { db, auth }
      ---Fin C칩digo---
  游늭 layouts
    游늯 AdminLayout.vue
  游늭 router
    游늯 index.js
      ---C칩digo---
      // src/router/index.js
      
      import { createRouter, createWebHistory } from 'vue-router'
      import { onAuthStateChanged } from 'firebase/auth'
      import { auth } from '@/firebase/config'
      
      // Vistas P칰blicas
      import HomeView from '../views/HomeView.vue'
      import NoticiasView from '../views/NoticiasView.vue'
      import NoticiaDetalleView from '../views/NoticiaDetalleView.vue'
      import DescargasView from '@/views/DescargasView.vue'
      import HistorialVersionesView from '@/views/HistorialVersionesView.vue' // <-- IMPORTAR NUEVA VISTA
      
      // Vistas de Autenticaci칩n y Perfil de Usuario
      import RegistroView from '@/views/RegistroView.vue'
      import LoginView from '@/views/LoginView.vue'
      import PerfilView from '@/views/PerfilView.vue'
      
      // Vistas y Layout del Admin
      import AdminLayout from '@/layouts/AdminLayout.vue'
      import AdminLoginView from '../views/admin/AdminLoginView.vue'
      import AdminDashboardView from '../views/admin/AdminDashboardView.vue'
      import AdminEncuestasView from '@/views/admin/AdminEncuestasView.vue'
      import AdminJugadoresView from '@/views/admin/AdminJugadoresView.vue'
      import AdminNoticiasView from '@/views/admin/AdminNoticiasView.vue'
      import AdminPatrocinadoresView from '@/views/admin/AdminPatrocinadoresView.vue' // <-- ESTA ES LA L칈NEA QUE FALTABA
      import AdminVersionesView from '@/views/admin/AdminVersionesView.vue' // <-- Importaci칩n para la nueva vista de admin
      
      const router = createRouter({
        history: createWebHistory(import.meta.env.BASE_URL),
        routes: [
          // --- Rutas P칰blicas y de Usuario ---
          { path: '/', name: 'home', component: HomeView },
          { path: '/descargas', name: 'descargas', component: DescargasView },
          {
            path: '/descargas/historial',
            name: 'historial-versiones',
            component: HistorialVersionesView,
          },
          { path: '/noticias', name: 'noticias', component: NoticiasView },
          { path: '/noticias/:id', name: 'noticia-detalle', component: NoticiaDetalleView, props: true },
          { path: '/registro', name: 'registro', component: RegistroView },
          { path: '/login', name: 'login', component: LoginView },
          {
            path: '/perfil',
            name: 'perfil',
            component: PerfilView,
            meta: { requiresAuth: true },
          },
      
          // --- Rutas de Administraci칩n ---
          { path: '/admin/login', name: 'admin-login', component: AdminLoginView },
          {
            path: '/admin',
            component: AdminLayout,
            meta: { requiresAuth: true },
            children: [
              { path: 'dashboard', name: 'admin-dashboard', component: AdminDashboardView },
              { path: 'encuestas', name: 'admin-encuestas', component: AdminEncuestasView },
              { path: 'jugadores', name: 'admin-jugadores', component: AdminJugadoresView },
              { path: 'noticias', name: 'admin-noticias', component: AdminNoticiasView },
              {
                path: 'patrocinadores',
                name: 'admin-patrocinadores',
                component: AdminPatrocinadoresView,
              },
              { path: 'versiones', name: 'admin-versiones', component: AdminVersionesView },
            ],
          },
        ],
      })
      
      // El guardi치n de rutas se queda exactamente igual
      const getCurrentUser = () => {
        return new Promise((resolve, reject) => {
          const removeListener = onAuthStateChanged(
            auth,
            (user) => {
              removeListener()
              resolve(user)
            },
            reject,
          )
        })
      }
      
      router.beforeEach(async (to, from, next) => {
        const requiresAuth = to.matched.some((record) => record.meta.requiresAuth)
        const isAdminRoute = to.path.startsWith('/admin/')
        const currentUser = await getCurrentUser()
      
        if (requiresAuth && !currentUser) {
          if (isAdminRoute) {
            next({ name: 'admin-login' })
          } else {
            next({ name: 'login' })
          }
        } else {
          next()
        }
      })
      
      export default router
      ---Fin C칩digo---
  游늭 stores
    游늯 counter.js
      ---C칩digo---
      import { ref, computed } from 'vue'
      import { defineStore } from 'pinia'
      
      export const useCounterStore = defineStore('counter', () => {
        const count = ref(0)
        const doubleCount = computed(() => count.value * 2)
        function increment() {
          count.value++
        }
      
        return { count, doubleCount, increment }
      })
      ---Fin C칩digo---
  游늭 views
    游늯 DescargasView.vue
    游늯 HistorialVersionesView.vue
    游늯 HomeView.vue
    游늯 LoginView.vue
    游늯 NoticiaDetalleView.vue
    游늯 NoticiasView.vue
    游늯 PerfilView.vue
    游늯 RegistroView.vue
    游늭 admin
      游늯 AdminDashboardView.vue
      游늯 AdminEncuestasView.vue
      游늯 AdminJugadoresView.vue
      游늯 AdminLoginView.vue
      游늯 AdminNoticiasView.vue
      游늯 AdminPatrocinadoresView.vue
      游늯 AdminVersionesView.vue
