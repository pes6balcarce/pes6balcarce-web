📂 src
  📄 .env.local
  📄 App.vue
  📄 estructura.txt
    ---Código---
    ---Fin Código---
  📄 main.js
    ---Código---
    console.log("--- DEBUGGING VERCEL ENV VARIABLES ---");
    console.log("Project ID recibido:", import.meta.env.VITE_PROJECT_ID);
    console.log("API Key recibida:", import.meta.env.VITE_API_KEY);
    
    // Importa tu configuración de Firebase aquí. Esto asegura que se inicialice.
    import '@/firebase/config';
    
    import './assets/main.css'
    
    import { createApp } from 'vue'
    import App from './App.vue'
    import router from './router'
    
    const app = createApp(App)
    
    app.use(router)
    
    app.mount('#app')
    ---Fin Código---
  📂 assets
    📄 base.css
      ---Código---
      /* color palette from <https://github.com/vuejs/theme> */
      :root {
        --vt-c-white: #ffffff;
        --vt-c-white-soft: #f8f8f8;
        --vt-c-white-mute: #f2f2f2;
      
        --vt-c-black: #181818;
        --vt-c-black-soft: #222222;
        --vt-c-black-mute: #282828;
      
        --vt-c-indigo: #2c3e50;
      
        --vt-c-divider-light-1: rgba(60, 60, 60, 0.29);
        --vt-c-divider-light-2: rgba(60, 60, 60, 0.12);
        --vt-c-divider-dark-1: rgba(84, 84, 84, 0.65);
        --vt-c-divider-dark-2: rgba(84, 84, 84, 0.48);
      
        --vt-c-text-light-1: var(--vt-c-indigo);
        --vt-c-text-light-2: rgba(60, 60, 60, 0.66);
        --vt-c-text-dark-1: var(--vt-c-white);
        --vt-c-text-dark-2: rgba(235, 235, 235, 0.64);
      }
      
      /* semantic color variables for this project */
      :root {
        --color-background: var(--vt-c-white);
        --color-background-soft: var(--vt-c-white-soft);
        --color-background-mute: var(--vt-c-white-mute);
      
        --color-border: var(--vt-c-divider-light-2);
        --color-border-hover: var(--vt-c-divider-light-1);
      
        --color-heading: var(--vt-c-text-light-1);
        --color-text: var(--vt-c-text-light-1);
      
        --section-gap: 160px;
      }
      
      @media (prefers-color-scheme: dark) {
        :root {
          --color-background: var(--vt-c-black);
          --color-background-soft: var(--vt-c-black-soft);
          --color-background-mute: var(--vt-c-black-mute);
      
          --color-border: var(--vt-c-divider-dark-2);
          --color-border-hover: var(--vt-c-divider-dark-1);
      
          --color-heading: var(--vt-c-text-dark-1);
          --color-text: var(--vt-c-text-dark-2);
        }
      }
      
      *,
      *::before,
      *::after {
        box-sizing: border-box;
        margin: 0;
        font-weight: normal;
      }
      
      body {
        min-height: 100vh;
        color: var(--color-text);
        background: var(--color-background);
        transition:
          color 0.5s,
          background-color 0.5s;
        line-height: 1.6;
        font-family:
          Inter,
          -apple-system,
          BlinkMacSystemFont,
          'Segoe UI',
          Roboto,
          Oxygen,
          Ubuntu,
          Cantarell,
          'Fira Sans',
          'Droid Sans',
          'Helvetica Neue',
          sans-serif;
        font-size: 15px;
        text-rendering: optimizeLegibility;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
      ---Fin Código---
    📄 logo.svg
    📄 main.css
      ---Código---
      /* 1. Variables de Color (Nuestra Paleta) */
      :root {
        --color-fondo: #121212;
        --color-superficie: #1e1e1e;
        
        /* CAMBIO: Reemplazamos el verde por el dorado del logo */
        --color-primario: #E8B943; /* Este es el dorado/ocre de tu logo */
      
        --color-texto-principal: #e0e0e0;
        --color-texto-secundario: #a0a0a0;
        --radio-borde: 8px;
      }
      
      /* 2. Estilos Globales y Reset Básico */
      * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
      }
      
      body {
        font-family: 'Roboto', sans-serif; /* Aplicamos la fuente que importamos */
        background-color: var(--color-fondo);
        color: var(--color-texto-principal);
        line-height: 1.6;
      }
      
      h1, h2, h3 {
        font-weight: 700; /* Hacemos los títulos más gruesos */
      }
      ---Fin Código---
    📂 images
      📄 logo.png
  📂 components
    📄 EncuestaActiva.vue
    📂 icons
      📄 IconCommunity.vue
      📄 IconDocumentation.vue
      📄 IconEcosystem.vue
      📄 IconSupport.vue
      📄 IconTooling.vue
  📂 firebase
    📄 config.js
      ---Código---
      import { initializeApp } from "firebase/app";
      import { getFirestore } from "firebase/firestore";
      import { getAuth } from "firebase/auth";
      
      // --- SOLUCIÓN DIRECTA PARA PRODUCCIÓN ---
      // Escribimos toda la configuración directamente para asegurar que funcione en Vercel.
      const firebaseConfig = {
        apiKey: "AIzaSyAXfKdc6dfdi0ZxV-aIMzi_cRD654asPU4",
        authDomain: "pes6balcarce2026.firebaseapp.com",
        projectId: "pes6balcarce2026",
        storageBucket: "pes6balcarce2026.firebasestorage.app",
        messagingSenderId: "896058552329",
        appId: "1:896058552329:web:35790a6652671130c108d8",
        measurementId: "G-KQ25EKH280"
      };
      // ------------------------------------
      
      // Initialize Firebase
      const app = initializeApp(firebaseConfig);
      
      // Initialize services
      const db = getFirestore(app);
      const auth = getAuth(app);
      
      // Exportamos todo para usarlo en la app
      export { db, auth };
      ---Fin Código---
  📂 layouts
    📄 AdminLayout.vue
  📂 router
    📄 index.js
      ---Código---
      import { createRouter, createWebHistory } from 'vue-router'
      import { onAuthStateChanged } from 'firebase/auth'
      import { auth } from '@/firebase/config'
      
      // Vistas Públicas
      import HomeView from '../views/HomeView.vue'
      import NoticiasView from '../views/NoticiasView.vue'
      import NoticiaDetalleView from '../views/NoticiaDetalleView.vue'
      import OnceIdealView from '@/views/OnceIdealView.vue'
      
      // Vistas de Autenticación y Perfil de Usuario
      import RegistroView from '@/views/RegistroView.vue'
      import LoginView from '@/views/LoginView.vue'
      import PerfilView from '@/views/PerfilView.vue'
      
      // Vistas y Layout del Admin
      import AdminLayout from '@/layouts/AdminLayout.vue'
      import AdminLoginView from '../views/admin/AdminLoginView.vue'
      import AdminDashboardView from '../views/admin/AdminDashboardView.vue'
      import AdminEncuestasView from '@/views/admin/AdminEncuestasView.vue'
      import AdminJugadoresView from '@/views/admin/AdminJugadoresView.vue'
      import AdminNoticiasView from '@/views/admin/AdminNoticiasView.vue' // <-- IMPORTAR NUEVA VISTA
      
      const router = createRouter({
        history: createWebHistory(import.meta.env.BASE_URL),
        routes: [
          // --- Rutas Públicas y de Usuario (sin cambios) ---
          { path: '/', name: 'home', component: HomeView },
          { path: '/noticias', name: 'noticias', component: NoticiasView },
          { path: '/noticias/:id', name: 'noticia-detalle', component: NoticiaDetalleView, props: true },
          { path: '/once-ideal', name: 'once-ideal', component: OnceIdealView },
          { path: '/registro', name: 'registro', component: RegistroView },
          { path: '/login', name: 'login', component: LoginView },
          { 
            path: '/perfil', 
            name: 'perfil', 
            component: PerfilView,
            meta: { requiresAuth: true }
          },
      
          // --- Rutas de Administración ---
          { path: '/admin/login', name: 'admin-login', component: AdminLoginView },
          {
            path: '/admin',
            component: AdminLayout,
            meta: { requiresAuth: true },
            children: [
              { path: 'dashboard', name: 'admin-dashboard', component: AdminDashboardView },
              { path: 'encuestas', name: 'admin-encuestas', component: AdminEncuestasView },
              { path: 'jugadores', name: 'admin-jugadores', component: AdminJugadoresView },
              { 
                path: 'noticias', // <-- AÑADIR NUEVA RUTA HIJA
                name: 'admin-noticias', 
                component: AdminNoticiasView 
              }
            ]
          }
        ]
      })
      
      // El guardián de rutas se queda exactamente igual
      const getCurrentUser = () => {
        return new Promise((resolve, reject) => {
          const removeListener = onAuthStateChanged(auth, (user) => {
            removeListener();
            resolve(user);
          }, reject)
        })
      }
      
      router.beforeEach(async (to, from, next) => {
        const requiresAuth = to.matched.some(record => record.meta.requiresAuth);
        const isAdminRoute = to.path.startsWith('/admin/');
        const currentUser = await getCurrentUser();
      
        if (requiresAuth && !currentUser) {
          if(isAdminRoute) {
            next({ name: 'admin-login' });
          } else {
            next({ name: 'login' });
          }
        } else {
          next();
        }
      })
      
      export default router
      ---Fin Código---
  📂 stores
    📄 counter.js
      ---Código---
      import { ref, computed } from 'vue'
      import { defineStore } from 'pinia'
      
      export const useCounterStore = defineStore('counter', () => {
        const count = ref(0)
        const doubleCount = computed(() => count.value * 2)
        function increment() {
          count.value++
        }
      
        return { count, doubleCount, increment }
      })
      ---Fin Código---
  📂 views
    📄 HomeView.vue
    📄 LoginView.vue
    📄 NoticiaDetalleView.vue
    📄 NoticiasView.vue
    📄 OnceIdealView.vue
    📄 PerfilView.vue
    📄 RegistroView.vue
    📂 admin
      📄 AdminDashboardView.vue
      📄 AdminEncuestasView.vue
      📄 AdminJugadoresView.vue
      📄 AdminLoginView.vue
      📄 AdminNoticiasView.vue
